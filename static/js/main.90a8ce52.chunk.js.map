{"version":3,"sources":["Task1/Profile.module.scss","Task2/Statistics.module.scss","Task3/FriendsList.module.scss","Task4/Transactions.module.scss","logo.svg","Task1/Profile.js","Task2/Statistics.js","Task3/FriendsList.js","Task4/Transactions.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","label","quantity","defaultProps","logo","Statistics","title","statistics","list","map","item","percentage","id","PropTypes","arrayOf","object","FriendsList","friends","friend__list","friend","isOnline","isOffline","width","TransactionHistory","items","transaction__history","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90a8ce52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2SetT\",\"avatar\":\"Profile_avatar__3lmfr\",\"name\":\"Profile_name__3FZ_3\",\"tag\":\"Profile_tag__1-MAH\",\"location\":\"Profile_location__1JiPt\",\"stats\":\"Profile_stats__3N-PJ\",\"label\":\"Profile_label__3BFXU\",\"quantity\":\"Profile_quantity__yvyJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2MhaR\",\"title\":\"Statistics_title__1JWvx\",\"list\":\"Statistics_list__3zYYO\",\"item\":\"Statistics_item__HaxWY\",\"label\":\"Statistics_label__1Ee5D\",\"percentage\":\"Statistics_percentage__1ZFXJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend__list\":\"FriendsList_friend__list__1HmcW\",\"item\":\"FriendsList_item__27-0B\",\"name\":\"FriendsList_name__2rcO8\",\"isOnline\":\"FriendsList_isOnline__1LlBX\",\"isOffline\":\"FriendsList_isOffline__1sGfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction__history\":\"Transactions_transaction__history__3Cx8V\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.scss';\r\nimport logo from '../logo.svg';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats: { followers, views, likes} }) => (\r\n    <div className={styles.profile}>\r\n    <div className={styles.description}>\r\n        <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={styles.avatar}\r\n        />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>{'@' + tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n        <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{followers}</span>\r\n        </li>\r\n        <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{views}</span>\r\n        </li>\r\n        <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{likes}</span>\r\n        </li>\r\n    </ul>\r\n    </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n    tag: 'some-tag',\r\n    avatar: logo,\r\n    stats: {\r\n        followers: 0,\r\n        views: 0,\r\n        likes: 0\r\n    }\r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.objectOf(PropTypes.number)\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.scss';\r\n\r\nconst Statistics = ({title, stats}) => (\r\n    <section className={styles.statistics}>\r\n    { title && (<h2 className={styles.title}>Upload stats</h2>)}\r\n    <ul className={styles.list}>\r\n       {stats.map((item) => (\r\n            <li className={styles.item} key={item.id}>\r\n            <span className={styles.label}>{item.label}</span>\r\n            <span className={styles.percentage}>{item.percentage}%</span>\r\n            </li>\r\n       ))}\r\n    </ul>\r\n    </section>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n    stats: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendsList.module.scss';\r\n\r\nconst FriendsList = ({ friends }) => (\r\n   <ul className={styles.friend__list}>\r\n      {friends.map((friend) => (\r\n          <li className={styles.item} key={friend.id}>\r\n          <span className={ friend.isOnline ? styles.isOnline : styles.isOffline}></span>\r\n          <img className={styles.avatar} src={friend.avatar} alt={friend.name} width=\"48\" />\r\n          <p className={styles.name}>{friend.name}</p>\r\n        </li>\r\n      ))}\r\n   </ul>\r\n);\r\n\r\nFriendsList.propTypes = {\r\n   friends: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default FriendsList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Transactions.module.scss';\r\n\r\nconst TransactionHistory = ({items}) => (\r\n    <table className={styles.transaction__history}>\r\n    <thead>\r\n        <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        {items.map((item) => (\r\n            <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n            </tr>\r\n        ))}\r\n    </tbody>\r\n    </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default TransactionHistory;","import './App.css';\nimport Profile from './Task1/Profile.js';\nimport user from './Task1/user.json';\n\nimport Statistics from './Task2/Statistics';\nimport statisticalData from './Task2/statistical-data.json';\n\nimport FriendsList from './Task3/FriendsList';\nimport friends from './Task3/friends.json';\n\nimport TransactionHistory from './Task4/Transactions';\nimport transactions from './Task4/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2> Task 1</h2>      \n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <h2> Task 2</h2>  \n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <h2> Task 3</h2>  \n      <FriendsList friends={friends} />\n      <h2> Task 4</h2>  \n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}